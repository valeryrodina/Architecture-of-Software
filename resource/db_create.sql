/******************************************************************************/
/***          Generated by IBExpert 2015.6.6.1 09.10.2015 4:27:55           ***/
/******************************************************************************/

/******************************************************************************/
/***                                Domains                                 ***/
/******************************************************************************/



/******************************************************************************/
/***                               Exceptions                               ***/
/******************************************************************************/

/******************************************************************************/
/***                               Procedures                               ***/
/******************************************************************************/

SET TERM ^ ;

SET TERM ; ^



/******************************************************************************/
/***                            Tables and Views                            ***/
/******************************************************************************/

CREATE TABLE APPLICATION (
    ID INTEGER NOT NULL,
    CLIENT_ID INTEGER,
    STATE_ID INTEGER,
    CREATION_DATE DATE,
    TEXT VARCHAR(256));


CREATE TABLE APPLICATION_STATE (
    ID INTEGER NOT NULL,
    APP_TEXT VARCHAR(20));


CREATE TABLE CLIENT (
    ID INTEGER NOT NULL,
    PERSON_ID INTEGER,
    BIRTHDATE DATE);


CREATE TABLE COACH (
    ID INTEGER NOT NULL,
    PERSON_ID INTEGER);


CREATE TABLE COACHCLIENTS (
    ID INTEGER NOT NULL,
    COACH_ID INTEGER,
    CLIENT_ID INTEGER);


CREATE TABLE DOCTOR (
    ID INTEGER NOT NULL,
    PERSON_ID INTEGER);


CREATE TABLE DOCTORCLIENTS (
    ID INTEGER NOT NULL,
    CLIENT_ID INTEGER,
    DOCTOR_ID INTEGER);


CREATE TABLE MANAGER (
    ID INTEGER NOT NULL,
    PERSON_ID INTEGER);


CREATE TABLE PERSON (
    ID INTEGER NOT NULL,
    FORNAME VARCHAR(10),
    SURNAME VARCHAR(10),
    LOGIN VARCHAR(10),
    PASSWORD VARCHAR(10),
    ONLINE INTEGER);




/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/


ALTER TABLE APPLICATION ADD CONSTRAINT PK_ORDER PRIMARY KEY (ID);
ALTER TABLE APPLICATION_STATE ADD CONSTRAINT PK_ORDER_STATE PRIMARY KEY (ID);
ALTER TABLE CLIENT ADD CONSTRAINT PK_CLIENT PRIMARY KEY (ID);
ALTER TABLE COACH ADD CONSTRAINT PK_COACH PRIMARY KEY (ID);
ALTER TABLE COACHCLIENTS ADD CONSTRAINT PK_COACHCLIENTS PRIMARY KEY (ID);
ALTER TABLE DOCTOR ADD CONSTRAINT PK_DOCTOR PRIMARY KEY (ID);
ALTER TABLE DOCTORCLIENTS ADD CONSTRAINT PK_DOCTORCLIENTS PRIMARY KEY (ID);
ALTER TABLE MANAGER ADD CONSTRAINT PK_MANAGER PRIMARY KEY (ID);
ALTER TABLE PERSON ADD CONSTRAINT PK_PERSON PRIMARY KEY (ID);

/******************************************************************************/
/***                           Unique constraints                           ***/
/******************************************************************************/



/******************************************************************************/
/***                              Foreign keys                              ***/
/******************************************************************************/


ALTER TABLE APPLICATION ADD CONSTRAINT APP_STATE_ID FOREIGN KEY (STATE_ID) REFERENCES APPLICATION_STATE (ID);
ALTER TABLE APPLICATION ADD CONSTRAINT APP_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT (ID);
ALTER TABLE CLIENT ADD CONSTRAINT CLIENT_PERSON_ID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (ID);
ALTER TABLE COACH ADD CONSTRAINT COACH_PERSON_ID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (ID);
ALTER TABLE COACHCLIENTS ADD CONSTRAINT COACHCLIENTS_COACH_ID FOREIGN KEY (COACH_ID) REFERENCES COACH (ID);
ALTER TABLE COACHCLIENTS ADD CONSTRAINT COACHCLIENTS_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT (ID);
ALTER TABLE DOCTOR ADD CONSTRAINT DOCTOR_PERSON_ID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (ID);
ALTER TABLE DOCTORCLIENTS ADD CONSTRAINT DOCTORCLIENTS_DOCTOR_ID FOREIGN KEY (DOCTOR_ID) REFERENCES DOCTOR (ID);
ALTER TABLE DOCTORCLIENTS ADD CONSTRAINT DOCTORCLIENTS_CLIENT_ID FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT (ID);
ALTER TABLE MANAGER ADD CONSTRAINT MANAGER_PERSON_ID FOREIGN KEY (PERSON_ID) REFERENCES PERSON (ID);

/******************************************************************************/
/***                           Check constraints                            ***/
/******************************************************************************/



/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/



/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/
CREATE GENERATOR APPLICATION_id;
SET GENERATOR APPLICATION_id TO 0;

set term !! ;
CREATE TRIGGER APPLICATION_bi FOR APPLICATION
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
NEW.ID = GEN_ID(APPLICATION_id, 1);
END!!
set term ; !!


CREATE GENERATOR APPLICATION_STATE_id;
SET GENERATOR APPLICATION_STATE_id TO 0;

set term !! ;
CREATE TRIGGER APPLICATION_STATE_bi FOR APPLICATION_STATE
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
NEW.ID = GEN_ID(APPLICATION_STATE_id, 1);
END!!
set term ; !!


CREATE GENERATOR CLIENT_id;
/*SET CLIENT_id TO 0;*/

set term !! ;
CREATE TRIGGER CLIENT_bi FOR CLIENT
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
NEW.ID = GEN_ID(CLIENT_id, 1);
END!!
set term ; !!


CREATE GENERATOR COACH_id;
SET GENERATOR COACH_id TO 0;

set term !! ;
CREATE TRIGGER COACH_bi FOR COACH
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
NEW.ID = GEN_ID(COACH_id, 1);
END!!
set term ; !!


CREATE GENERATOR COACHCLIENTS_id;
SET GENERATOR COACHCLIENTS_id TO 0;

set term !! ;
CREATE TRIGGER COACHCLIENTS_bi FOR COACHCLIENTS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
NEW.ID = GEN_ID(COACHCLIENTS_id, 1);
END!!
set term ; !!


CREATE GENERATOR DOCTOR_id;
SET GENERATOR DOCTOR_id TO 0;

set term !! ;
CREATE TRIGGER DOCTOR_bi FOR DOCTOR
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
NEW.ID = GEN_ID(DOCTOR_id, 1);
END!!
set term ; !!


CREATE GENERATOR DOCTORCLIENTS_id;
SET GENERATOR DOCTORCLIENTS_id TO 0;

set term !! ;
CREATE TRIGGER DOCTORCLIENTS_bi FOR DOCTORCLIENTS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
NEW.ID = GEN_ID(DOCTORCLIENTS_id, 1);
END!!
set term ; !!


CREATE GENERATOR MANAGER_id;
SET GENERATOR MANAGER_id TO 0;

set term !! ;
CREATE TRIGGER MANAGER_bi FOR MANAGER
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
NEW.ID = GEN_ID(MANAGER_id, 1);
END!!
set term ; !!


CREATE GENERATOR PERSON_id;
SET GENERATOR PERSON_id TO 0;

set term !! ;
CREATE TRIGGER PERSON_bi FOR PERSON
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
NEW.ID = GEN_ID(PERSON_id, 1);
END!!
set term ; !!






SET TERM ^ ;

SET TERM ; ^

/******************************************************************************/
/***                               Procedures                               ***/
/******************************************************************************/

SET TERM ^ ;

SET TERM ; ^



/******************************************************************************/
/***                          Object descriptions                           ***/
/******************************************************************************/

